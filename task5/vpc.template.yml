AWSTemplateFormatVersion: 2010-09-09
Description: Vpc template for aws mentoring programm
Parameters:
  EnvironmentName:
    Description: Environment name
    Type: String
    Default: AwsMentoringProgram
  VpcCIDR:
    Description: Vpc cidr variable 
    Type: String
    Default: 10.0.0.0/16
  PublicCIDR1:
    Description: Public cidr block 
    Type: String
    Default: 10.0.11.0/24
  PublicCIDR2:
    Description: Public cidr block 
    Type: String
    Default: 10.0.12.0/24
  PrivateCIDR1:
    Description: Private cidr block 
    Type: String
    Default: 10.0.21.0/24
  PrivateCIDR2:
    Description: Private cidr block 
    Type: String
    Default: 10.0.22.0/24
  DataBaseCIDR1:
    Description: Data base cidr block 
    Type: String
    Default: 10.0.31.0/24
  DataBaseCIDR2:
    Description: Data base cidr block 
    Type: String
    Default: 10.0.32.0/24
  PublicDestinationCIDR:
    Description: Public destination cidr block 
    Type: String
    Default: 0.0.0.0/0
  PrivateDestinationCIDR:
    Description: Private destination cidr block 
    Type: String
    Default: 0.0.0.0/0
  DataBaseDestinationCIDR:
    Description: DataBase destination cidr block 
    Type: String
    Default: 0.0.0.0/0
  LaunchConfigurationImageId:
    Description: Launch configuration image id
    Type: String
    Default: ami-00c03f7f7f2ec15c3
  LaunchConfigurationInstanceType:
    Description: Launch configuration instance type
    Type: String
    Default: t2.micro
Resources: 
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}VPC
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicCIDR1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}PublicSubnet1
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicCIDR2
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}PublicSubnet2
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateCIDR1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}PrivateSubnet1
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateCIDR2
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}PrivateSubnet2
  DataBaseSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      VpcId: !Ref VPC
      CidrBlock: !Ref DataBaseCIDR1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}DataBaseSubnet1
  DataBaseSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      VpcId: !Ref VPC
      CidrBlock: !Ref DataBaseCIDR2
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}DataBaseSubnet2
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}PublicRouteTable
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: !Ref PublicDestinationCIDR
      GatewayId: !Ref InternetGateway
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}PrivateRouteTable
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable
  DataBaseRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}DataBaseRouteTable
  DataBaseSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DataBaseSubnet1
      RouteTableId: !Ref DataBaseRouteTable
  DataBaseSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DataBaseSubnet2
      RouteTableId: !Ref DataBaseRouteTable
  NatGateway1EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    DependsOn: InternetGatewayAttachment
  NatGateway2EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    DependsOn: InternetGatewayAttachment
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2
  DefaultPrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: !Ref PrivateDestinationCIDR 
      NatGatewayId: !Ref NatGateway1
  DefaultDataBaseRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref DataBaseRouteTable
      DestinationCidrBlock: !Ref DataBaseDestinationCIDR 
      NatGatewayId: !Ref NatGateway2
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${EnvironmentName}SecurityGroup 
      GroupDescription: "SSH security group"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      LaunchConfigurationName: !Sub ${EnvironmentName}LaunchConfiguration
      AssociatePublicIpAddress: true
      ImageId: !Ref LaunchConfigurationImageId
      InstanceType: !Ref LaunchConfigurationInstanceType
      SecurityGroups:
        - !Ref SecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 10
            VolumeType: gp2
            Encrypted: true
            DeleteOnTermination: true
  AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      LaunchConfigurationName: !Ref LaunchConfiguration
      VPCZoneIdentifier:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      MinSize: 1
      MaxSize: 3
      Cooldown: '300'
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}AutoScalingGroup
          PropagateAtLaunch: true
Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC
  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
  PrivateSubnets:
    Description: A list of the private subnets
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2, !Ref DataBaseSubnet1, !Ref DataBaseSubnet2 ]]
  PublicSubnet1:
    Description: First public subnet
    Value: !Ref PublicSubnet1
  PublicSubnet2:
    Description: Second public subnet
    Value: !Ref PublicSubnet2
  PrivateSubnet1:
    Description: First private subnet
    Value: !Ref PrivateSubnet1
  PrivateSubnet2:
    Description: Second private subnet
    Value: !Ref PrivateSubnet2
  DataBaseSubnet1:
    Description: First data base subnet
    Value: !Ref DataBaseSubnet1
  DataBaseSubnet2:
    Description: Second data base subnet
    Value: !Ref DataBaseSubnet2
  SecurityGroup:
    Description: Security group
    Value: !Ref SecurityGroup